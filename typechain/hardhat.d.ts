/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "ERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Upgradeable__factory>;
    getContractFactory(
      name: "IERC20MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20MetadataUpgradeable__factory>;
    getContractFactory(
      name: "IERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Upgradeable__factory>;
    getContractFactory(
      name: "Delegation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Delegation__factory>;
    getContractFactory(
      name: "FTSOManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FTSOManager__factory>;
    getContractFactory(
      name: "NFTP",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTP__factory>;
    getContractFactory(
      name: "INFTP",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INFTP__factory>;
    getContractFactory(
      name: "NFTPBooster",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTPBooster__factory>;
    getContractFactory(
      name: "INFTP",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INFTP__factory>;
    getContractFactory(
      name: "ITokenContract1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenContract1155__factory>;
    getContractFactory(
      name: "ITokenContract721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenContract721__factory>;
    getContractFactory(
      name: "NFTPRedeemer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTPRedeemer__factory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
  }
}
